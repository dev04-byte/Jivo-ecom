-- Fix po_master table schema to match migrations
-- This script checks if po_master has the correct schema and fixes it if needed

-- Check current columns
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'po_master'
ORDER BY ordinal_position;

-- If po_master has 'platform' VARCHAR column instead of 'platform_id' INTEGER, we need to fix it
-- First, backup the existing data
DO $$
BEGIN
    -- Check if the old 'platform' column exists
    IF EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'po_master' AND column_name = 'platform'
    ) THEN
        -- Create temporary table with new schema
        CREATE TEMP TABLE po_master_backup AS
        SELECT * FROM po_master;

        -- Drop the old table
        DROP TABLE IF EXISTS po_master CASCADE;

        -- Create new po_master table with correct schema
        CREATE TABLE po_master (
            id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            po_number VARCHAR(100) NOT NULL UNIQUE,
            company VARCHAR(100) NOT NULL,
            platform_id INTEGER NOT NULL,
            serving_distributor VARCHAR(200),
            po_date TIMESTAMP NOT NULL,
            expiry_date TIMESTAMP,
            appointment_date TIMESTAMP,
            region VARCHAR(100) NOT NULL,
            state VARCHAR(100) NOT NULL,
            city VARCHAR(100) NOT NULL,
            area VARCHAR(100),
            dispatch_from VARCHAR(100),
            warehouse VARCHAR(100),
            status VARCHAR(50) DEFAULT 'OPEN' NOT NULL,
            comments TEXT,
            attachment VARCHAR(255),
            created_by VARCHAR(100),
            created_at TIMESTAMP DEFAULT NOW(),
            updated_at TIMESTAMP DEFAULT NOW()
        );

        -- Note: We cannot automatically migrate the data because 'platform' (text) needs to be
        -- mapped to 'platform_id' (integer). You'll need to manually map platform names to IDs.

        RAISE NOTICE 'po_master table schema has been updated. Old data is in po_master_backup temp table.';
        RAISE NOTICE 'You need to manually migrate data by mapping platform names to platform IDs.';
    ELSE
        RAISE NOTICE 'po_master table already has the correct schema with platform_id column.';
    END IF;
END $$;
