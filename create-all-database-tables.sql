-- =====================================================
-- Create All Database Tables for Jivo E-Commerce Operations
-- Generated from schema.ts definitions
-- =====================================================

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "pg_cron";

-- =====================================================
-- CORE MASTER TABLES
-- =====================================================

-- File Upload Tracking Table
CREATE TABLE IF NOT EXISTS file_upload_tracking (
    id SERIAL PRIMARY KEY,
    file_hash VARCHAR(64) NOT NULL,
    original_filename TEXT NOT NULL,
    platform VARCHAR(50) NOT NULL,
    business_unit VARCHAR(50) NOT NULL,
    period_type VARCHAR(20) NOT NULL,
    upload_type VARCHAR(50) NOT NULL, -- 'inventory', 'secondary-sales', 'po'
    uploaded_at TIMESTAMP DEFAULT NOW(),
    file_size INTEGER,
    uploader_info TEXT
);

-- SAP Item Master Table
CREATE TABLE IF NOT EXISTS sap_item_mst (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    itemcode VARCHAR(50) NOT NULL UNIQUE,
    itemname TEXT NOT NULL,
    type VARCHAR(50),
    itemgroup VARCHAR(100),
    variety VARCHAR(100),
    subgroup VARCHAR(100),
    brand VARCHAR(100),
    uom VARCHAR(20),
    taxrate DECIMAL(5,2),
    unitsize VARCHAR(50),
    is_litre BOOLEAN DEFAULT false,
    case_pack INTEGER
);

-- SAP Item Master API Table (synchronized from SQL Server)
CREATE TABLE IF NOT EXISTS sap_item_mst_api (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    itemcode VARCHAR(50) NOT NULL UNIQUE,
    itemname TEXT NOT NULL,
    type VARCHAR(50),
    itemgroup VARCHAR(100),
    variety VARCHAR(100),
    subgroup VARCHAR(100),
    brand VARCHAR(100),
    uom VARCHAR(20),
    taxrate DECIMAL(5,2),
    unitsize VARCHAR(50),
    is_litre BOOLEAN DEFAULT false,
    case_pack INTEGER,
    last_synced TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Items Master Table (unified items from HANA)
CREATE TABLE IF NOT EXISTS items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    itemcode VARCHAR(50) NOT NULL UNIQUE,
    itemname TEXT NOT NULL,
    itemgroup VARCHAR(100),
    type VARCHAR(50),
    variety VARCHAR(100),
    subgroup VARCHAR(100),
    brand VARCHAR(100),
    uom VARCHAR(20),
    taxrate DECIMAL(5,2),
    unitsize VARCHAR(50),
    is_litre BOOLEAN DEFAULT false,
    case_pack INTEGER,
    basic_rate DECIMAL(12,2),
    landing_rate DECIMAL(12,2),
    mrp DECIMAL(12,2),
    supplier_price DECIMAL(12,2),
    last_synced TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Platform Master Table
CREATE TABLE IF NOT EXISTS pf_mst (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    pf_name VARCHAR(100) NOT NULL UNIQUE
);

-- States Master Table
CREATE TABLE IF NOT EXISTS states_mst (
    id SERIAL PRIMARY KEY,
    state_name VARCHAR(100) NOT NULL,
    state_code VARCHAR(10),
    region VARCHAR(50)
);

-- Districts Master Table
CREATE TABLE IF NOT EXISTS districts_mst (
    id SERIAL PRIMARY KEY,
    district_name VARCHAR(100) NOT NULL,
    district_code VARCHAR(10),
    state_id INTEGER REFERENCES states_mst(id)
);

-- Status Master Table
CREATE TABLE IF NOT EXISTS statuses (
    id SERIAL PRIMARY KEY,
    status_name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    is_active BOOLEAN DEFAULT true
);

-- Status Item Table
CREATE TABLE IF NOT EXISTS status_item (
    id SERIAL PRIMARY KEY,
    item_id INTEGER NOT NULL,
    status_id INTEGER NOT NULL REFERENCES statuses(id),
    table_name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- States Table (simplified)
CREATE TABLE IF NOT EXISTS states (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(10)
);

-- Districts Table (simplified)
CREATE TABLE IF NOT EXISTS districts (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(10),
    state_id INTEGER REFERENCES states(id)
);

-- Distributors Table
CREATE TABLE IF NOT EXISTS distributors (
    id SERIAL PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    code VARCHAR(50),
    contact TEXT
);

-- Enhanced User Table
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    full_name TEXT,
    phone VARCHAR(20),
    role VARCHAR(20) DEFAULT 'user',
    department VARCHAR(100) DEFAULT 'E-Com',
    is_active BOOLEAN DEFAULT true,
    last_login TIMESTAMP,
    password_changed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Log Master Table
CREATE TABLE IF NOT EXISTS log_master (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    username VARCHAR(100) NOT NULL,
    action VARCHAR(50) NOT NULL, -- 'CREATE', 'UPDATE', 'DELETE'
    table_name VARCHAR(100) NOT NULL,
    record_id INTEGER NOT NULL,
    field_name VARCHAR(100),
    old_value TEXT,
    new_value TEXT,
    ip_address VARCHAR(45),
    user_agent TEXT,
    session_id VARCHAR(100),
    timestamp TIMESTAMP DEFAULT NOW() NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Platform Item Master Table
CREATE TABLE IF NOT EXISTS pf_item_mst (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    pf_itemcode VARCHAR(100) NOT NULL,
    pf_itemname TEXT NOT NULL,
    pf_id INTEGER NOT NULL REFERENCES pf_mst(id),
    sap_id VARCHAR(50) NOT NULL,
    CONSTRAINT pf_item_mst_pf_id_itemcode_unique UNIQUE (pf_id, pf_itemcode),
    CONSTRAINT pf_item_mst_pf_id_itemname_unique UNIQUE (pf_id, pf_itemname)
);

-- Distributor Master Table
CREATE TABLE IF NOT EXISTS distributor_mst (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    distributor_name VARCHAR(200) NOT NULL UNIQUE,
    distributor_code VARCHAR(50) UNIQUE,
    contact_person VARCHAR(100),
    phone VARCHAR(20),
    email VARCHAR(100),
    address TEXT,
    city VARCHAR(100),
    state VARCHAR(50),
    region VARCHAR(50),
    status VARCHAR(20) NOT NULL DEFAULT 'Active',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- PLATFORM PURCHASE ORDER TABLES
-- =====================================================

-- Platform PO Table
CREATE TABLE IF NOT EXISTS pf_po (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    platform INTEGER NOT NULL REFERENCES pf_mst(id),
    serving_distributor VARCHAR(200),
    order_date TIMESTAMP NOT NULL,
    expiry_date TIMESTAMP,
    appointment_date TIMESTAMP,
    region VARCHAR(50),
    state VARCHAR(50),
    city VARCHAR(100),
    area VARCHAR(100),
    state_id INTEGER REFERENCES states(id),
    district_id INTEGER REFERENCES districts(id),
    status VARCHAR(20) NOT NULL DEFAULT 'Open',
    attachment TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Platform Order Items Table
CREATE TABLE IF NOT EXISTS pf_order_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES pf_po(id) ON DELETE CASCADE,
    item_name TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    sap_code VARCHAR(50),
    category VARCHAR(100),
    subcategory VARCHAR(100),
    basic_rate DECIMAL(10,2) NOT NULL,
    gst_rate DECIMAL(5,2) NOT NULL,
    landing_rate DECIMAL(10,2) NOT NULL,
    total_litres DECIMAL(10,3),
    status VARCHAR(50) DEFAULT 'Pending',
    hsn_code VARCHAR(20),
    -- Invoice fields
    invoice_date DATE,
    invoice_litre DECIMAL(14,2),
    invoice_amount DECIMAL(14,2),
    invoice_qty DECIMAL(14,2)
);

-- Distributor PO Table
CREATE TABLE IF NOT EXISTS distributor_po (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    distributor_id INTEGER NOT NULL REFERENCES distributor_mst(id),
    serving_distributor VARCHAR(200),
    order_date TIMESTAMP NOT NULL,
    expiry_date TIMESTAMP,
    appointment_date TIMESTAMP,
    region VARCHAR(50),
    state VARCHAR(50),
    city VARCHAR(100),
    area VARCHAR(100),
    status VARCHAR(20) NOT NULL DEFAULT 'Open',
    attachment TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Distributor Order Items Table
CREATE TABLE IF NOT EXISTS distributor_order_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES distributor_po(id) ON DELETE CASCADE,
    item_name TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    sap_code VARCHAR(50),
    category VARCHAR(100),
    subcategory VARCHAR(100),
    basic_rate DECIMAL(10,2) NOT NULL,
    gst_rate DECIMAL(5,2) NOT NULL,
    landing_rate DECIMAL(10,2) NOT NULL,
    total_litres DECIMAL(10,3),
    status VARCHAR(50) DEFAULT 'Pending',
    hsn_code VARCHAR(20)
);

-- PO Master Table
CREATE TABLE IF NOT EXISTS po_master (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    platform VARCHAR(50) NOT NULL,
    business_unit VARCHAR(50) NOT NULL,
    po_date TIMESTAMP,
    expiry_date TIMESTAMP,
    total_items INTEGER DEFAULT 0,
    total_quantity DECIMAL(15,2) DEFAULT 0,
    total_amount DECIMAL(15,2) DEFAULT 0,
    currency VARCHAR(10) DEFAULT 'INR',
    status VARCHAR(50) DEFAULT 'Open',
    distributor VARCHAR(200),
    region VARCHAR(100),
    state VARCHAR(100),
    city VARCHAR(100),
    area VARCHAR(100),
    created_by VARCHAR(100),
    uploaded_by VARCHAR(100),
    attachment_path TEXT,
    notes TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- PO Lines Table
CREATE TABLE IF NOT EXISTS po_lines (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES po_master(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    item_code VARCHAR(100),
    item_name TEXT NOT NULL,
    hsn_code VARCHAR(20),
    category VARCHAR(100),
    brand VARCHAR(100),
    quantity INTEGER NOT NULL,
    uom VARCHAR(20),
    unit_price DECIMAL(12,2),
    basic_cost DECIMAL(12,2),
    tax_rate DECIMAL(5,2),
    tax_amount DECIMAL(12,2),
    total_amount DECIMAL(15,2),
    mrp DECIMAL(10,2),
    landing_rate DECIMAL(12,2),
    supplier_price DECIMAL(12,2),
    status VARCHAR(50) DEFAULT 'Pending',
    notes TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- FLIPKART GROCERY PO TABLES
-- =====================================================

-- Flipkart Grocery PO Header Table
CREATE TABLE IF NOT EXISTS flipkart_grocery_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(50) NOT NULL UNIQUE,
    supplier_name TEXT NOT NULL,
    supplier_address TEXT,
    supplier_contact VARCHAR(20),
    supplier_email VARCHAR(100),
    supplier_gstin VARCHAR(20),
    billed_to_address TEXT,
    billed_to_gstin VARCHAR(20),
    shipped_to_address TEXT,
    shipped_to_gstin VARCHAR(20),
    nature_of_supply VARCHAR(50),
    nature_of_transaction VARCHAR(50),
    po_expiry_date TIMESTAMP,
    category VARCHAR(100),
    order_date TIMESTAMP NOT NULL,
    mode_of_payment VARCHAR(50),
    contract_ref_id VARCHAR(100),
    contract_version VARCHAR(10),
    credit_term VARCHAR(100),
    total_quantity INTEGER,
    total_taxable_value DECIMAL(12,2),
    total_tax_amount DECIMAL(12,2),
    total_amount DECIMAL(12,2),
    status VARCHAR(20) NOT NULL DEFAULT 'Open',
    distributor VARCHAR(200),
    area VARCHAR(100),
    city VARCHAR(100),
    region VARCHAR(100),
    state VARCHAR(100),
    dispatch_from VARCHAR(100),
    created_by VARCHAR(100),
    uploaded_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Flipkart Grocery PO Lines Table
CREATE TABLE IF NOT EXISTS flipkart_grocery_po_lines (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    header_id INTEGER NOT NULL REFERENCES flipkart_grocery_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    hsn_code VARCHAR(20),
    fsn_isbn VARCHAR(50),
    quantity INTEGER NOT NULL,
    pending_quantity INTEGER,
    uom VARCHAR(20),
    title TEXT NOT NULL,
    brand VARCHAR(100),
    type VARCHAR(100),
    ean VARCHAR(20),
    vertical VARCHAR(100),
    required_by_date TIMESTAMP,
    supplier_mrp DECIMAL(10,2),
    supplier_price DECIMAL(10,2),
    taxable_value DECIMAL(10,2),
    igst_rate DECIMAL(5,2),
    igst_amount_per_unit DECIMAL(10,2),
    sgst_rate DECIMAL(5,2),
    sgst_amount_per_unit DECIMAL(10,2),
    cgst_rate DECIMAL(5,2),
    cgst_amount_per_unit DECIMAL(10,2),
    cess_rate DECIMAL(5,2),
    cess_amount_per_unit DECIMAL(10,2),
    tax_amount DECIMAL(10,2),
    total_amount DECIMAL(10,2),
    status VARCHAR(50) DEFAULT 'Pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- ZEPTO PO TABLES
-- =====================================================

-- Zepto PO Header Table
CREATE TABLE IF NOT EXISTS zepto_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(50) NOT NULL,
    status VARCHAR(20) DEFAULT 'Open',
    total_quantity INTEGER DEFAULT 0,
    total_cost_value DECIMAL(15,2) DEFAULT 0,
    total_tax_amount DECIMAL(15,2) DEFAULT 0,
    total_amount DECIMAL(15,2) DEFAULT 0,
    unique_brands TEXT[],
    created_by VARCHAR(100),
    uploaded_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Zepto PO Lines Table
CREATE TABLE IF NOT EXISTS zepto_po_lines (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_header_id INTEGER REFERENCES zepto_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    po_number VARCHAR(50),
    sku TEXT,
    brand VARCHAR(100),
    sku_id VARCHAR(100),
    sap_id VARCHAR(50),
    hsn_code VARCHAR(20),
    ean_no VARCHAR(50),
    po_qty INTEGER DEFAULT 0,
    asn_qty INTEGER DEFAULT 0,
    grn_qty INTEGER DEFAULT 0,
    remaining_qty INTEGER DEFAULT 0,
    cost_price DECIMAL(10,2),
    cgst DECIMAL(10,2),
    sgst DECIMAL(10,2),
    igst DECIMAL(10,2),
    cess DECIMAL(10,2),
    mrp DECIMAL(10,2),
    total_value DECIMAL(15,2),
    status VARCHAR(20) DEFAULT 'Pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- CITY MALL PO TABLES
-- =====================================================

-- City Mall PO Header Table
CREATE TABLE IF NOT EXISTS city_mall_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(50) NOT NULL,
    status VARCHAR(20) DEFAULT 'Open',
    total_quantity INTEGER DEFAULT 0,
    total_base_amount DECIMAL(15,2) DEFAULT 0,
    total_igst_amount DECIMAL(15,2) DEFAULT 0,
    total_cess_amount DECIMAL(15,2) DEFAULT 0,
    total_amount DECIMAL(15,2) DEFAULT 0,
    unique_hsn_codes TEXT[],
    created_by VARCHAR(100),
    uploaded_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- City Mall PO Lines Table
CREATE TABLE IF NOT EXISTS city_mall_po_lines (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_header_id INTEGER REFERENCES city_mall_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    article_id VARCHAR(50),
    article_name TEXT,
    hsn_code VARCHAR(20),
    mrp DECIMAL(10,2),
    base_cost_price DECIMAL(10,2),
    quantity INTEGER DEFAULT 0,
    base_amount DECIMAL(15,2),
    igst_percent DECIMAL(5,2),
    cess_percent DECIMAL(5,2),
    igst_amount DECIMAL(10,2),
    cess_amount DECIMAL(10,2),
    total_amount DECIMAL(15,2),
    status VARCHAR(20) DEFAULT 'Pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- BLINKIT PO TABLES
-- =====================================================

-- Blinkit PO Header Table
CREATE TABLE IF NOT EXISTS blinkit_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(50) NOT NULL,
    status VARCHAR(20) DEFAULT 'Open',
    total_quantity INTEGER DEFAULT 0,
    total_items INTEGER DEFAULT 0,
    total_basic_cost DECIMAL(15,2) DEFAULT 0,
    total_tax_amount DECIMAL(15,2) DEFAULT 0,
    total_landing_rate DECIMAL(15,2) DEFAULT 0,
    cart_discount DECIMAL(15,2) DEFAULT 0,
    net_amount DECIMAL(15,2) DEFAULT 0,
    unique_hsn_codes TEXT[],
    created_by VARCHAR(100),
    uploaded_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit PO Lines Table
CREATE TABLE IF NOT EXISTS blinkit_po_lines (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_header_id INTEGER REFERENCES blinkit_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    item_code VARCHAR(50),
    hsn_code VARCHAR(20),
    product_upc VARCHAR(50),
    product_description TEXT,
    grammage VARCHAR(50),
    basic_cost_price DECIMAL(10,2),
    cgst_percent DECIMAL(5,2),
    sgst_percent DECIMAL(5,2),
    igst_percent DECIMAL(5,2),
    cess_percent DECIMAL(5,2),
    additional_cess DECIMAL(10,2),
    tax_amount DECIMAL(10,2),
    landing_rate DECIMAL(10,2),
    quantity INTEGER DEFAULT 0,
    mrp DECIMAL(10,2),
    margin_percent DECIMAL(5,2),
    total_amount DECIMAL(15,2),
    status VARCHAR(20) DEFAULT 'Active',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- SWIGGY PO TABLES
-- =====================================================

-- Swiggy PO Table
CREATE TABLE IF NOT EXISTS swiggy_pos (
    id SERIAL PRIMARY KEY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    po_date TIMESTAMP,
    po_release_date TIMESTAMP,
    expected_delivery_date TIMESTAMP,
    po_expiry_date TIMESTAMP,
    vendor_name VARCHAR(255),
    payment_terms VARCHAR(100),
    total_items INTEGER DEFAULT 0,
    total_quantity INTEGER DEFAULT 0,
    total_taxable_value DECIMAL(15,2),
    total_tax_amount DECIMAL(15,2),
    grand_total DECIMAL(15,2),
    unique_hsn_codes VARCHAR[],
    status VARCHAR(50) DEFAULT 'pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy PO Lines Table
CREATE TABLE IF NOT EXISTS swiggy_po_lines (
    id SERIAL PRIMARY KEY,
    po_id INTEGER REFERENCES swiggy_pos(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    item_code VARCHAR(100) NOT NULL,
    item_description TEXT,
    hsn_code VARCHAR(20),
    quantity INTEGER NOT NULL,
    mrp DECIMAL(10,2),
    unit_base_cost DECIMAL(10,3),
    taxable_value DECIMAL(12,5),
    cgst_rate DECIMAL(5,2),
    cgst_amount DECIMAL(10,5),
    sgst_rate DECIMAL(5,2),
    sgst_amount DECIMAL(10,5),
    igst_rate DECIMAL(5,2),
    igst_amount DECIMAL(10,5),
    cess_rate DECIMAL(5,2),
    cess_amount DECIMAL(10,5),
    additional_cess DECIMAL(10,5),
    total_tax_amount DECIMAL(10,5),
    line_total DECIMAL(12,5),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- BIGBASKET PO TABLES
-- =====================================================

-- BigBasket PO Header Table
CREATE TABLE IF NOT EXISTS bigbasket_po_header (
    id SERIAL PRIMARY KEY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    po_date TIMESTAMP,
    po_expiry_date TIMESTAMP,
    warehouse_address TEXT,
    delivery_address TEXT,
    supplier_name VARCHAR(255),
    supplier_address TEXT,
    supplier_gstin VARCHAR(50),
    dc_address TEXT,
    dc_gstin VARCHAR(50),
    total_items INTEGER DEFAULT 0,
    total_quantity INTEGER DEFAULT 0,
    total_basic_cost DECIMAL(15,2),
    total_gst_amount DECIMAL(15,2),
    total_cess_amount DECIMAL(15,2),
    grand_total DECIMAL(15,2),
    status VARCHAR(50) DEFAULT 'pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket PO Lines Table
CREATE TABLE IF NOT EXISTS bigbasket_po_lines (
    id SERIAL PRIMARY KEY,
    po_id INTEGER REFERENCES bigbasket_po_header(id) ON DELETE CASCADE,
    s_no INTEGER NOT NULL,
    hsn_code VARCHAR(20),
    sku_code VARCHAR(100) NOT NULL,
    description TEXT,
    ean_upc_code VARCHAR(50),
    case_quantity INTEGER,
    quantity INTEGER NOT NULL,
    basic_cost DECIMAL(10,2),
    sgst_percent DECIMAL(5,2),
    sgst_amount DECIMAL(10,2),
    cgst_percent DECIMAL(5,2),
    cgst_amount DECIMAL(10,2),
    igst_percent DECIMAL(5,2),
    igst_amount DECIMAL(10,2),
    gst_percent DECIMAL(5,2),
    gst_amount DECIMAL(10,2),
    cess_percent DECIMAL(5,2),
    cess_value DECIMAL(10,2),
    state_cess_percent DECIMAL(5,2),
    state_cess DECIMAL(10,2),
    landing_cost DECIMAL(10,2),
    mrp DECIMAL(10,2),
    total_value DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- ZOMATO PO TABLES
-- =====================================================

-- Zomato PO Header Table
CREATE TABLE IF NOT EXISTS zomato_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    po_date TIMESTAMP,
    expected_delivery_date TIMESTAMP,
    account_number VARCHAR(50),
    vendor_id VARCHAR(50),
    bill_from_name TEXT,
    bill_from_address TEXT,
    bill_from_gstin VARCHAR(20),
    bill_from_phone VARCHAR(20),
    bill_to_name TEXT,
    bill_to_address TEXT,
    bill_to_gstin VARCHAR(20),
    ship_from_name TEXT,
    ship_from_address TEXT,
    ship_from_gstin VARCHAR(20),
    ship_to_name TEXT,
    ship_to_address TEXT,
    ship_to_gstin VARCHAR(20),
    total_items INTEGER DEFAULT 0,
    total_quantity INTEGER DEFAULT 0,
    total_basic_cost DECIMAL(15,2),
    total_cgst_amount DECIMAL(15,2),
    total_sgst_amount DECIMAL(15,2),
    total_igst_amount DECIMAL(15,2),
    total_cess_amount DECIMAL(15,2),
    grand_total DECIMAL(15,2),
    status VARCHAR(50) DEFAULT 'pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Zomato PO Items Table
CREATE TABLE IF NOT EXISTS zomato_po_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_header_id INTEGER REFERENCES zomato_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    item_code VARCHAR(100),
    item_description TEXT,
    hsn_code VARCHAR(20),
    quantity INTEGER NOT NULL,
    basic_cost DECIMAL(10,2),
    cgst_rate DECIMAL(5,2),
    cgst_amount DECIMAL(10,2),
    sgst_rate DECIMAL(5,2),
    sgst_amount DECIMAL(10,2),
    igst_rate DECIMAL(5,2),
    igst_amount DECIMAL(10,2),
    cess_rate DECIMAL(5,2),
    cess_amount DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- DEALSHARE PO TABLES
-- =====================================================

-- Dealshare PO Header Table
CREATE TABLE IF NOT EXISTS dealshare_po_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_number VARCHAR(100) NOT NULL UNIQUE,
    po_date TIMESTAMP,
    supplier_name VARCHAR(255),
    total_items INTEGER DEFAULT 0,
    total_quantity INTEGER DEFAULT 0,
    total_basic_value DECIMAL(15,2),
    total_cgst_amount DECIMAL(15,2),
    total_sgst_amount DECIMAL(15,2),
    total_igst_amount DECIMAL(15,2),
    total_cess_amount DECIMAL(15,2),
    grand_total DECIMAL(15,2),
    status VARCHAR(50) DEFAULT 'pending',
    created_by VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Dealshare PO Items Table
CREATE TABLE IF NOT EXISTS dealshare_po_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_header_id INTEGER REFERENCES dealshare_po_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    item_code VARCHAR(100),
    item_description TEXT,
    hsn_code VARCHAR(20),
    quantity INTEGER NOT NULL,
    basic_rate DECIMAL(10,2),
    basic_value DECIMAL(12,2),
    cgst_rate DECIMAL(5,2),
    cgst_amount DECIMAL(10,2),
    sgst_rate DECIMAL(5,2),
    sgst_amount DECIMAL(10,2),
    igst_rate DECIMAL(5,2),
    igst_amount DECIMAL(10,2),
    cess_rate DECIMAL(5,2),
    cess_amount DECIMAL(10,2),
    total_tax_amount DECIMAL(10,2),
    cess_percent DECIMAL(5,2),
    gross_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- SECONDARY SALES TABLES
-- =====================================================

-- Secondary Sales Header Table
CREATE TABLE IF NOT EXISTS secondary_sales_header (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    platform VARCHAR(50) NOT NULL, -- amazon, flipkart, etc.
    business_unit VARCHAR(50) NOT NULL, -- jivo-wellness, jivo-mart, marketplace
    period_start TIMESTAMP,
    period_end TIMESTAMP,
    report_generated_date TIMESTAMP,
    total_items INTEGER DEFAULT 0,
    total_quantity DECIMAL(15,2) DEFAULT 0,
    total_sales_amount DECIMAL(15,2) DEFAULT 0,
    total_commission DECIMAL(15,2) DEFAULT 0,
    currency VARCHAR(10) DEFAULT 'INR',
    status VARCHAR(20) DEFAULT 'Active',
    uploaded_by VARCHAR(100) DEFAULT 'admin',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Secondary Sales Items Table
CREATE TABLE IF NOT EXISTS secondary_sales_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    header_id INTEGER NOT NULL REFERENCES secondary_sales_header(id) ON DELETE CASCADE,
    line_number INTEGER NOT NULL,
    product_sku VARCHAR(100),
    product_name TEXT,
    product_asin VARCHAR(50), -- Amazon specific
    category VARCHAR(100),
    brand VARCHAR(100),
    quantity_sold INTEGER,
    unit_price DECIMAL(10,2),
    total_sales DECIMAL(12,2),
    commission_rate DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    shipping_fee DECIMAL(10,2),
    promotion_discount DECIMAL(10,2),
    net_amount DECIMAL(12,2),
    transaction_date TIMESTAMP,
    order_id VARCHAR(100),
    customer_location VARCHAR(100),
    fulfillment_method VARCHAR(50), -- FBA, FBM, etc.
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- PLATFORM-SPECIFIC SECONDARY SALES TABLES
-- =====================================================

-- Amazon Jivo Wellness Daily Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_AM_JW_Daily" (
    id SERIAL PRIMARY KEY,
    asin VARCHAR(50),
    fnsku VARCHAR(50),
    sku TEXT,
    product_name TEXT,
    quantity INTEGER,
    marketplace VARCHAR(50),
    fulfillment VARCHAR(50),
    order_date DATE,
    order_id VARCHAR(100),
    currency VARCHAR(10),
    item_price DECIMAL(10,2),
    item_fees DECIMAL(10,2),
    other_fees DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Wellness Range Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_AM_JW_Range" (
    id SERIAL PRIMARY KEY,
    asin VARCHAR(50),
    fnsku VARCHAR(50),
    sku TEXT,
    product_name TEXT,
    quantity INTEGER,
    marketplace VARCHAR(50),
    fulfillment VARCHAR(50),
    order_date DATE,
    order_id VARCHAR(100),
    currency VARCHAR(10),
    item_price DECIMAL(10,2),
    item_fees DECIMAL(10,2),
    other_fees DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Mart Daily Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_AM_JM_Daily" (
    id SERIAL PRIMARY KEY,
    asin VARCHAR(50),
    fnsku VARCHAR(50),
    sku TEXT,
    product_name TEXT,
    quantity INTEGER,
    marketplace VARCHAR(50),
    fulfillment VARCHAR(50),
    order_date DATE,
    order_id VARCHAR(100),
    currency VARCHAR(10),
    item_price DECIMAL(10,2),
    item_fees DECIMAL(10,2),
    other_fees DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Mart Range Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_AM_JM_Range" (
    id SERIAL PRIMARY KEY,
    asin VARCHAR(50),
    fnsku VARCHAR(50),
    sku TEXT,
    product_name TEXT,
    quantity INTEGER,
    marketplace VARCHAR(50),
    fulfillment VARCHAR(50),
    order_date DATE,
    order_id VARCHAR(100),
    currency VARCHAR(10),
    item_price DECIMAL(10,2),
    item_fees DECIMAL(10,2),
    other_fees DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Zepto Jivo Mart Daily Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Zepto_JM_Daily" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_time TIME,
    order_id VARCHAR(100),
    sku_id VARCHAR(100),
    sku TEXT,
    category VARCHAR(100),
    quantity INTEGER,
    unit_price DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    commission_rate DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    net_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Zepto Jivo Mart Range Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Zepto_JM_Range" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_time TIME,
    order_id VARCHAR(100),
    sku_id VARCHAR(100),
    sku TEXT,
    category VARCHAR(100),
    quantity INTEGER,
    unit_price DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    commission_rate DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    net_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Jivo Mart Daily Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Blinkit_JM_Daily" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Jivo Mart Range Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Blinkit_JM_Range" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    total_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Jivo Mart Daily Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Swiggy_JM_Daily" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    restaurant_name VARCHAR(200),
    item_name TEXT,
    item_id VARCHAR(100),
    quantity INTEGER,
    item_price DECIMAL(10,2),
    item_total DECIMAL(10,2),
    commission_percent DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    payment_processing_fee DECIMAL(10,2),
    delivery_fee DECIMAL(10,2),
    net_payout DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Jivo Mart Range Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_Swiggy_JM_Range" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    restaurant_name VARCHAR(200),
    item_name TEXT,
    item_id VARCHAR(100),
    quantity INTEGER,
    item_price DECIMAL(10,2),
    item_total DECIMAL(10,2),
    commission_percent DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    payment_processing_fee DECIMAL(10,2),
    delivery_fee DECIMAL(10,2),
    net_payout DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- FlipKart Jivo Mart 2 Month Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_FlipKart_JM_2Month" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    order_item_id VARCHAR(100),
    fsn VARCHAR(50),
    sku TEXT,
    product_title TEXT,
    quantity INTEGER,
    selling_price DECIMAL(10,2),
    total_selling_price DECIMAL(12,2),
    transfer_price DECIMAL(10,2),
    total_transfer_price DECIMAL(12,2),
    tcs_cgst DECIMAL(10,2),
    tcs_sgst DECIMAL(10,2),
    tcs_igst DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- FlipKart Chirag 2 Month Secondary Sales
CREATE TABLE IF NOT EXISTS "SC_FlipKart_CHIRAG_2Month" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    order_item_id VARCHAR(100),
    fsn VARCHAR(50),
    sku TEXT,
    product_title TEXT,
    quantity INTEGER,
    selling_price DECIMAL(10,2),
    total_selling_price DECIMAL(12,2),
    transfer_price DECIMAL(10,2),
    total_transfer_price DECIMAL(12,2),
    tcs_cgst DECIMAL(10,2),
    tcs_sgst DECIMAL(10,2),
    tcs_igst DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- JioMart Sale Daily
CREATE TABLE IF NOT EXISTS "SC_JioMartSale_JM_Daily" (
    id SERIAL PRIMARY KEY,
    transaction_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    discount_amount DECIMAL(10,2),
    final_amount DECIMAL(12,2),
    commission_rate DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    tds_amount DECIMAL(10,2),
    net_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- JioMart Sale Range
CREATE TABLE IF NOT EXISTS "SC_JioMartSale_JM_Range" (
    id SERIAL PRIMARY KEY,
    transaction_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    discount_amount DECIMAL(10,2),
    final_amount DECIMAL(12,2),
    commission_rate DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    tds_amount DECIMAL(10,2),
    net_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- JioMart Cancel Daily
CREATE TABLE IF NOT EXISTS "SC_JioMartCancel_JM_Daily" (
    id SERIAL PRIMARY KEY,
    cancellation_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    quantity INTEGER,
    cancelled_amount DECIMAL(12,2),
    refund_amount DECIMAL(12,2),
    cancellation_reason TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

-- JioMart Cancel Range
CREATE TABLE IF NOT EXISTS "SC_JioMartCancel_JM_Range" (
    id SERIAL PRIMARY KEY,
    cancellation_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    quantity INTEGER,
    cancelled_amount DECIMAL(12,2),
    refund_amount DECIMAL(12,2),
    cancellation_reason TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Jivo Mart Daily
CREATE TABLE IF NOT EXISTS "SC_BigBasket_JM_Daily" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    category VARCHAR(100),
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    discount DECIMAL(10,2),
    final_price DECIMAL(10,2),
    commission_percent DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    payout_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Jivo Mart Range
CREATE TABLE IF NOT EXISTS "SC_BigBasket_JM_Range" (
    id SERIAL PRIMARY KEY,
    order_date DATE,
    order_id VARCHAR(100),
    product_id VARCHAR(100),
    product_name TEXT,
    category VARCHAR(100),
    quantity INTEGER,
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    discount DECIMAL(10,2),
    final_price DECIMAL(10,2),
    commission_percent DECIMAL(5,2),
    commission_amount DECIMAL(10,2),
    payout_amount DECIMAL(12,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- INVENTORY TABLES
-- =====================================================

-- JioMart Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_JioMart_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    sku VARCHAR(100),
    opening_stock INTEGER,
    stock_received INTEGER,
    stock_sold INTEGER,
    stock_returned INTEGER,
    closing_stock INTEGER,
    days_of_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- JioMart Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_JioMart_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    sku VARCHAR(100),
    opening_stock INTEGER,
    stock_received INTEGER,
    stock_sold INTEGER,
    stock_returned INTEGER,
    closing_stock INTEGER,
    days_of_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    selling_price DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_Blinkit_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    opening_stock INTEGER,
    inward_stock INTEGER,
    sold_quantity INTEGER,
    damaged_quantity INTEGER,
    closing_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_Blinkit_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    brand VARCHAR(100),
    category VARCHAR(100),
    opening_stock INTEGER,
    inward_stock INTEGER,
    sold_quantity INTEGER,
    damaged_quantity INTEGER,
    closing_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- FlipKart Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_FlipKart_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    fsn VARCHAR(50),
    sku VARCHAR(100),
    product_title TEXT,
    vertical VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    brand VARCHAR(100),
    opening_stock INTEGER,
    inward_quantity INTEGER,
    sold_quantity INTEGER,
    return_quantity INTEGER,
    customer_return INTEGER,
    closing_stock INTEGER,
    reserved_quantity INTEGER,
    sellable_quantity INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- FlipKart Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_FlipKart_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    fsn VARCHAR(50),
    sku VARCHAR(100),
    product_title TEXT,
    vertical VARCHAR(100),
    category VARCHAR(100),
    sub_category VARCHAR(100),
    brand VARCHAR(100),
    opening_stock INTEGER,
    inward_quantity INTEGER,
    sold_quantity INTEGER,
    return_quantity INTEGER,
    customer_return INTEGER,
    closing_stock INTEGER,
    reserved_quantity INTEGER,
    sellable_quantity INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_Amazon_JM_Daily" (
    id SERIAL PRIMARY KEY,
    snapshot_date DATE,
    fnsku VARCHAR(50),
    asin VARCHAR(50),
    product_name TEXT,
    condition_type VARCHAR(50),
    warehouse_condition_code VARCHAR(10),
    quantity_available INTEGER,
    reserved_fc_transfers INTEGER,
    reserved_fc_processing INTEGER,
    reserved_customer_orders INTEGER,
    fulfillable_quantity INTEGER,
    inbound_working INTEGER,
    inbound_shipped INTEGER,
    inbound_receiving INTEGER,
    total_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_Amazon_JM_Range" (
    id SERIAL PRIMARY KEY,
    snapshot_date DATE,
    fnsku VARCHAR(50),
    asin VARCHAR(50),
    product_name TEXT,
    condition_type VARCHAR(50),
    warehouse_condition_code VARCHAR(10),
    quantity_available INTEGER,
    reserved_fc_transfers INTEGER,
    reserved_fc_processing INTEGER,
    reserved_customer_orders INTEGER,
    fulfillable_quantity INTEGER,
    inbound_working INTEGER,
    inbound_shipped INTEGER,
    inbound_receiving INTEGER,
    total_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Wellness Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_Amazon_JW_Daily" (
    id SERIAL PRIMARY KEY,
    snapshot_date DATE,
    fnsku VARCHAR(50),
    asin VARCHAR(50),
    product_name TEXT,
    condition_type VARCHAR(50),
    warehouse_condition_code VARCHAR(10),
    quantity_available INTEGER,
    reserved_fc_transfers INTEGER,
    reserved_fc_processing INTEGER,
    reserved_customer_orders INTEGER,
    fulfillable_quantity INTEGER,
    inbound_working INTEGER,
    inbound_shipped INTEGER,
    inbound_receiving INTEGER,
    total_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Amazon Jivo Wellness Range Inventory
CREATE TABLE IF NOT EXISTS "INV_Amazon_JW_Range" (
    id SERIAL PRIMARY KEY,
    snapshot_date DATE,
    fnsku VARCHAR(50),
    asin VARCHAR(50),
    product_name TEXT,
    condition_type VARCHAR(50),
    warehouse_condition_code VARCHAR(10),
    quantity_available INTEGER,
    reserved_fc_transfers INTEGER,
    reserved_fc_processing INTEGER,
    reserved_customer_orders INTEGER,
    fulfillable_quantity INTEGER,
    inbound_working INTEGER,
    inbound_shipped INTEGER,
    inbound_receiving INTEGER,
    total_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_Swiggy_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    item_id VARCHAR(100),
    item_name TEXT,
    category VARCHAR(100),
    restaurant_name VARCHAR(200),
    opening_stock INTEGER,
    stock_added INTEGER,
    stock_consumed INTEGER,
    stock_wasted INTEGER,
    closing_stock INTEGER,
    stock_value DECIMAL(15,2),
    cost_per_unit DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_Swiggy_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    item_id VARCHAR(100),
    item_name TEXT,
    category VARCHAR(100),
    restaurant_name VARCHAR(200),
    opening_stock INTEGER,
    stock_added INTEGER,
    stock_consumed INTEGER,
    stock_wasted INTEGER,
    closing_stock INTEGER,
    stock_value DECIMAL(15,2),
    cost_per_unit DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Zepto Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_Zepto_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    sku_id VARCHAR(100),
    sku_name TEXT,
    category VARCHAR(100),
    opening_quantity INTEGER,
    inward_quantity INTEGER,
    outward_quantity INTEGER,
    closing_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Zepto Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_Zepto_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    sku_id VARCHAR(100),
    sku_name TEXT,
    category VARCHAR(100),
    opening_quantity INTEGER,
    inward_quantity INTEGER,
    outward_quantity INTEGER,
    closing_quantity INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Jivo Mart Daily Inventory
CREATE TABLE IF NOT EXISTS "INV_BigBasket_JM_Daily" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    category VARCHAR(100),
    brand VARCHAR(100),
    opening_stock INTEGER,
    inward_stock INTEGER,
    outward_stock INTEGER,
    closing_stock INTEGER,
    blocked_stock INTEGER,
    available_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Jivo Mart Range Inventory
CREATE TABLE IF NOT EXISTS "INV_BigBasket_JM_Range" (
    id SERIAL PRIMARY KEY,
    report_date DATE,
    product_id VARCHAR(100),
    product_name TEXT,
    category VARCHAR(100),
    brand VARCHAR(100),
    opening_stock INTEGER,
    inward_stock INTEGER,
    outward_stock INTEGER,
    closing_stock INTEGER,
    blocked_stock INTEGER,
    available_stock INTEGER,
    stock_value DECIMAL(15,2),
    mrp DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- ATTACHMENT AND COMMENT TABLES
-- =====================================================

-- Zepto Attachments
CREATE TABLE IF NOT EXISTS zepto_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES zepto_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Zepto Comments
CREATE TABLE IF NOT EXISTS zepto_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES zepto_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Flipkart Attachments
CREATE TABLE IF NOT EXISTS flipkart_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES flipkart_grocery_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Flipkart Comments
CREATE TABLE IF NOT EXISTS flipkart_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES flipkart_grocery_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Attachments
CREATE TABLE IF NOT EXISTS blinkit_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES blinkit_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Blinkit Comments
CREATE TABLE IF NOT EXISTS blinkit_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES blinkit_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Attachments
CREATE TABLE IF NOT EXISTS swiggy_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES swiggy_pos(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Swiggy Comments
CREATE TABLE IF NOT EXISTS swiggy_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES swiggy_pos(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Attachments
CREATE TABLE IF NOT EXISTS bigbasket_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES bigbasket_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- BigBasket Comments
CREATE TABLE IF NOT EXISTS bigbasket_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES bigbasket_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Zomato Attachments
CREATE TABLE IF NOT EXISTS zomato_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES zomato_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Zomato Comments
CREATE TABLE IF NOT EXISTS zomato_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES zomato_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Dealshare Attachments
CREATE TABLE IF NOT EXISTS dealshare_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES dealshare_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Dealshare Comments
CREATE TABLE IF NOT EXISTS dealshare_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES dealshare_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- CityMall Attachments
CREATE TABLE IF NOT EXISTS citymall_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES city_mall_po_header(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- CityMall Comments
CREATE TABLE IF NOT EXISTS citymall_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES city_mall_po_header(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Platform PO Attachments
CREATE TABLE IF NOT EXISTS platform_po_attachments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES pf_po(id) ON DELETE CASCADE,
    file_name TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_type TEXT,
    file_size INTEGER,
    uploaded_by INTEGER REFERENCES users(id),
    uploaded_at TIMESTAMP DEFAULT NOW(),
    description TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Platform PO Comments
CREATE TABLE IF NOT EXISTS platform_po_comments (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    po_id INTEGER NOT NULL REFERENCES pf_po(id) ON DELETE CASCADE,
    comment TEXT NOT NULL,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =====================================================
-- INDEXES FOR PERFORMANCE OPTIMIZATION
-- =====================================================

-- Core master table indexes
CREATE INDEX IF NOT EXISTS idx_sap_item_mst_itemcode ON sap_item_mst(itemcode);
CREATE INDEX IF NOT EXISTS idx_items_itemcode ON items(itemcode);
CREATE INDEX IF NOT EXISTS idx_pf_item_mst_pf_id ON pf_item_mst(pf_id);
CREATE INDEX IF NOT EXISTS idx_pf_item_mst_sap_id ON pf_item_mst(sap_id);

-- PO table indexes
CREATE INDEX IF NOT EXISTS idx_pf_po_platform ON pf_po(platform);
CREATE INDEX IF NOT EXISTS idx_pf_po_order_date ON pf_po(order_date);
CREATE INDEX IF NOT EXISTS idx_pf_po_status ON pf_po(status);
CREATE INDEX IF NOT EXISTS idx_flipkart_po_header_po_number ON flipkart_grocery_po_header(po_number);
CREATE INDEX IF NOT EXISTS idx_flipkart_po_header_order_date ON flipkart_grocery_po_header(order_date);
CREATE INDEX IF NOT EXISTS idx_zepto_po_header_po_number ON zepto_po_header(po_number);

-- Secondary sales indexes
CREATE INDEX IF NOT EXISTS idx_secondary_sales_header_platform ON secondary_sales_header(platform);
CREATE INDEX IF NOT EXISTS idx_secondary_sales_header_business_unit ON secondary_sales_header(business_unit);
CREATE INDEX IF NOT EXISTS idx_secondary_sales_items_header_id ON secondary_sales_items(header_id);

-- Inventory table indexes
CREATE INDEX IF NOT EXISTS idx_inv_jiomart_jm_daily_report_date ON "INV_JioMart_JM_Daily"(report_date);
CREATE INDEX IF NOT EXISTS idx_inv_blinkit_jm_daily_report_date ON "INV_Blinkit_JM_Daily"(report_date);
CREATE INDEX IF NOT EXISTS idx_inv_flipkart_jm_daily_report_date ON "INV_FlipKart_JM_Daily"(report_date);
CREATE INDEX IF NOT EXISTS idx_inv_amazon_jm_daily_snapshot_date ON "INV_Amazon_JM_Daily"(snapshot_date);

-- User and log indexes
CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
CREATE INDEX IF NOT EXISTS idx_log_master_user_id ON log_master(user_id);
CREATE INDEX IF NOT EXISTS idx_log_master_timestamp ON log_master(timestamp);
CREATE INDEX IF NOT EXISTS idx_log_master_table_name ON log_master(table_name);

-- =====================================================
-- FINAL NOTES
-- =====================================================
-- All tables have been created based on the schema.ts definitions
-- This includes:
-- - Core master tables (items, platforms, users, etc.)
-- - All platform PO tables (Flipkart, Zepto, Blinkit, Swiggy, etc.)
-- - Secondary sales tables (SC_*) for all platforms
-- - Inventory tables (INV_*) for all platforms
-- - Attachment and comment tables for all platforms
-- - Performance indexes for critical queries
-- =====================================================